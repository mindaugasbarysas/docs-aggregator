Writing and Building Documentation
==================================

Why?
----

Readthedocs compiles documentation from one repository only. We have many.
So this repository clones other repositories defined in components/.repos and lets you have documentation from a number of (public) repositories.

How to: Test whether your documentation builds locally
------------------------------------------------------

Refer to .travis.yml :-)
or, alternatively:
::

    # [ NB: you must have python installed ]
    sudo easy_install pip
    sudo pip install -q sphinx --use-mirrors
    # [ NB: execute the following commands in your projects' directory ]
    wget -q -O conf.py https://raw.githubusercontent.com/ongr-io/ongr-handbook/master/source/conf-travis.py
    mkdir _static
    sphinx-build -nW -b html -c . Resources/doc _build/html

if sphinx says ``unknown locale: UTF-8``, add the following lines to your ``.bash_profile`` file:
::

    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8

You will have to restart your terminal session.

If sphinx says something along the lines of ``WARNING: master file ... not found``, check your conf.py file - it must not be empty. 
Maybe your wget could not get the file from the repository?

How to: enable documentation checking / documentation rebuild on merge in travis in your bundle
-----------------------------------------------------------------------------------------------

.travis.yml should contain the following lines

in install section:
::

  - sudo pip install -q sphinx
  - wget -q -O conf.py https://raw.githubusercontent.com/ongr-io/docs-aggregator/master/source/conf-travis.py
  - mkdir _static
  
in script section:
::

    - sphinx-build -nWq -b html -c . Resources/doc _build/html

in after_script section:
::

    - '[ "${TRAVIS_PULL_REQUEST}" = "false" ] && wget --post-data="" -q -O /dev/null http://readthedocs.org/build/ongr'

and, while you're at it, you can enable cache for speeding up subsequent builds:
::

    cache:
        directories:
            - vendor/
            - $HOME/.composer/cache

of course, this step is completely optional :-)

How to: PHP API documentation generator
---------------------------------------

::

    composer global require "sphpdox/sphpdox:dev-master"
    composer update
    cd ~/.composer/vendor/sphpdox/sphpdox/
    ./sphpdox.php process -o ~/myOutputDir  'My\Name\Space' ~/myProjectSource/

How to setup your repo documentation structure?
-----------------------------------------------

Use ``{ProjectRoot}\Resources\doc\`` for human documentation. Please have a ``index.rst`` with something like this inside:

::

    Your project name
    =================

    Contents:

    .. toctree::
            :maxdepth: 150
            :titlesonly:
            :glob:

            somethingSomething/important*
            *

Use ``{ProjectRoot}\Resources\API\`` for autogenerated API documentation.

Only these two directories will be retrieved and processed.

Requirements for rst files
--------------------------

When linking to documents,

- Please use relative paths
- Please link documents like this:

::

    - `MySQL Binlog Diff Provider <binlog.rst>`_

instead of this:
::

    Abstract provider class: DiffProvider_
    ...
    something something
    ...

    .. _DiffProvider: diff_provider.rst

As the following method makes sphinx sad, while using `:doc:` directive makes GitHub cry.

Usage
-----

Add git repositories to components/.repos file.
Publish it on github, add as a project to readthedocs.
Build and enjoy.


How does this work?
-------------------

It's a mystery!

|mystery|


.. |mystery| image:: /images/mystery.gif
